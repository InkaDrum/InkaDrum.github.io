{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Prog\\\\Udemy React\\\\nav2goe\\\\src\\\\components\\\\ConnectionSelect.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport ConnectionDisplay from \"./ConnectionDisplay\";\nimport SearchPage from \"./SearchPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ConnectionSelect = props => {\n  _s();\n\n  const [upperConnectionStarted, setUpperConnectionStarted] = useState(false);\n  const [lowerConnectionStarted, setLowerConnectionStarted] = useState(false);\n  const [backToSearchPageClicked, setBackToSearchPageClicked] = useState(false);\n  const [hideConnectionSelect, setHideConnectionSelect] = useState(false);\n  const [upperButtonFirstPressed, setUpperButtonFirstPressed] = useState(false);\n  const [lowerButtonFirstPressed, setLowerButtonFirstPressed] = useState(false);\n  let FahrtkostenGuenstig = 5;\n  let durationHour = 0.5;\n  let durationMin = 10;\n  let durationCheapHour = 0;\n  let durationCheapMin = 15; // Dauer Schnell\n  // zwei Zufällige Fahrtdauern bestehend aus h und min ausgeben, wobei die erste die Kürzere ist\n\n  const durations = () => {\n    let slowH,\n        slowMin,\n        fastH,\n        fastMin = 0;\n    let t1 = Math.floor(Math.random() * (105 - 25 + 1)) + 25;\n    let t2 = Math.floor(Math.random() * (105 - 25 + 1)) + 25;\n\n    if (t2 > t1) {\n      if (t1 >= 60) {\n        fastH = 1;\n        fastMin = t1 - 60;\n      } else {\n        fastH = 0;\n        fastMin = t1;\n      }\n\n      if (t2 >= 60) {\n        slowH = 1;\n        slowMin = t2 - 60;\n      } else {\n        slowH = 0;\n        slowMin = t2;\n      }\n    }\n\n    if (t1 > t2) {\n      if (t2 >= 60) {\n        fastH = 1;\n        fastMin = t2 - 60;\n      } else {\n        fastH = 0;\n        fastMin = t2;\n      }\n\n      if (t1 >= 60) {\n        slowH = 1;\n        slowMin = t1 - 60;\n      } else {\n        slowH = 0;\n        slowMin = t1;\n      }\n    }\n\n    return {\n      slowH,\n      slowMin,\n      fastH,\n      fastMin\n    };\n  };\n\n  const values = durations();\n  console.log(values);\n  var slowH = values[1];\n  var slowMin = values[2];\n  var fastH = values[3];\n  var fastMin = values[4]; // const timeMinRandomizer = (Min) => {\n  //   Min = Math.round((Min+(Math.random()*60)));\n  //   durationMin = Min;\n  //   return durationMin\n  // }\n  // // Dauer Günstig\n  // const timeHourCheapRandomizer = () => {\n  //   durationCheapHour = Math.round((durationHour + (Math.random()*1)));\n  //   console.log(durationCheapHour)\n  //   return Math.round((durationCheapHour))\n  // }\n  // const timeMinCheapRandomizer = () => {\n  //   let durationCheapMin = Math.round((durationMin+(Math.random()*10)));\n  //   return durationCheapMin\n  // }\n\n  const Fahrtkostenrechner = Fahrtkosten => {\n    Fahrtkosten = Fahrtkosten + Math.random() * 10;\n    FahrtkostenGuenstig = Fahrtkosten;\n    return Math.round(FahrtkostenGuenstig);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [hideConnectionSelect ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"logo\",\n        children: \"Nav2G\\xF6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Verbindungsauswahl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connectionChoice\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"G\\xFCnstigste Verbindung\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"containerCheapestConnection\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"verbindung-textfeld\",\n            children: [\"Fahrtkosten: \", Fahrtkostenrechner(FahrtkostenGuenstig), \" \\u20AC \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"verbindung-textfeld\",\n            children: [\"Dauer: \", values[1].current.value, \" h \", slowMin, \" min\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"verbindung-textfeld\",\n            children: \"Umstiege 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), upperConnectionStarted ?\n    /*#__PURE__*/\n    // lowerConnectionStarted? null : (\n    _jsxDEV(ConnectionDisplay, {\n      departureStop: props.departureStop,\n      destinationStop: props.destinationStop,\n      departureDay: props.departureDay,\n      departureTime: props.departureTime,\n      upperConnectionStarted: upperConnectionStarted,\n      lowerConnectionStarted: lowerConnectionStarted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this) : lowerButtonFirstPressed ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connectionChoice\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setUpperConnectionStarted(true);\n          setUpperButtonFirstPressed(true);\n          setHideConnectionSelect(true);\n        },\n        children: [\" \", \"Route starten\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), hideConnectionSelect ? null : /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connectionChoice\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Schnellste Verbindung\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"containerFastestConnection\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"verbindung-textfeld\",\n            children: [\"Fahrtkosten: \", Fahrtkostenrechner(FahrtkostenGuenstig), \" \\u20AC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"verbindung-textfeld\",\n            children: [\"Dauer: \", fastH, \" h \", fastMin, \" min \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"verbindung-textfeld\",\n            children: \"Umstiege 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this), backToSearchPageClicked ? /*#__PURE__*/_jsxDEV(SearchPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setBackToSearchPageClicked(true);\n          setHideConnectionSelect(true);\n          props.onGoBack();\n        },\n        children: [\" \", \"Zur\\xFCck zur Suche\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), lowerConnectionStarted ? /*#__PURE__*/_jsxDEV(ConnectionDisplay, {\n      departureStop: props.departureStop,\n      destinationStop: props.destinationStop,\n      departureDay: props.departureDay,\n      departureTime: props.departureTime,\n      upperConnectionStarted: upperConnectionStarted,\n      lowerConnectionStarted: lowerConnectionStarted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this) : upperButtonFirstPressed ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connectionChoice\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"containerFastestConnection\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setLowerConnectionStarted(true);\n            setLowerButtonFirstPressed(true);\n            setHideConnectionSelect(true);\n          },\n          children: [\" \", \"Route starten\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ConnectionSelect, \"0EBKFNiD84uvhHnHicpw+AxOeuo=\");\n\n_c = ConnectionSelect;\nexport default ConnectionSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectionSelect\");","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/Prog/Udemy React/nav2goe/src/components/ConnectionSelect.js"],"names":["useState","ConnectionDisplay","SearchPage","ConnectionSelect","props","upperConnectionStarted","setUpperConnectionStarted","lowerConnectionStarted","setLowerConnectionStarted","backToSearchPageClicked","setBackToSearchPageClicked","hideConnectionSelect","setHideConnectionSelect","upperButtonFirstPressed","setUpperButtonFirstPressed","lowerButtonFirstPressed","setLowerButtonFirstPressed","FahrtkostenGuenstig","durationHour","durationMin","durationCheapHour","durationCheapMin","durations","slowH","slowMin","fastH","fastMin","t1","Math","floor","random","t2","values","console","log","Fahrtkostenrechner","Fahrtkosten","round","current","value","departureStop","destinationStop","departureDay","departureTime","onGoBack"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport ConnectionDisplay from \"./ConnectionDisplay\";\r\nimport SearchPage from \"./SearchPage\";\r\n\r\nconst ConnectionSelect = (props) => {\r\n  const [upperConnectionStarted , setUpperConnectionStarted] = useState(false);\r\n  const [lowerConnectionStarted, setLowerConnectionStarted] = useState(false);\r\n  const [backToSearchPageClicked , setBackToSearchPageClicked] = useState(false);\r\n  const [hideConnectionSelect, setHideConnectionSelect] = useState(false);\r\n  const [upperButtonFirstPressed, setUpperButtonFirstPressed] = useState(false);\r\n  const [lowerButtonFirstPressed, setLowerButtonFirstPressed] = useState(false);\r\n\r\n  let FahrtkostenGuenstig = 5;\r\n\r\n  let durationHour = 0.5;\r\n  let durationMin = 10;\r\n  let durationCheapHour = 0;\r\n  let durationCheapMin = 15;\r\n  // Dauer Schnell\r\n\r\n// zwei Zufällige Fahrtdauern bestehend aus h und min ausgeben, wobei die erste die Kürzere ist\r\nconst durations = () => {\r\n    let slowH, slowMin, fastH, fastMin = 0;\r\n    let t1 = Math.floor(Math.random() * (105 - 25 + 1)) + 25;\r\n    let t2=  Math.floor(Math.random() * (105 - 25+ 1)) + 25;\r\n    if(t2>t1){\r\n      if(t1>=60){fastH=1; fastMin = t1-60;}else{fastH=0; fastMin = t1;}\r\n      if(t2>=60){slowH=1; slowMin = t2-60;}else{slowH=0; slowMin = t2;}\r\n    }\r\n    if(t1>t2){\r\n      if(t2>=60){fastH=1; fastMin = t2-60;}else{fastH=0; fastMin = t2;}\r\n      if(t1>=60){slowH=1; slowMin = t1-60;}else{slowH=0; slowMin = t1;}\r\n    }\r\n    return {slowH, slowMin, fastH, fastMin};\r\n  }\r\n  const values = durations();\r\n  console.log(values)\r\n  var slowH = values[1];\r\n  var slowMin = values [2];\r\n  var fastH = values [3];\r\n  var fastMin = values [4];\r\n\r\n  // const timeMinRandomizer = (Min) => {\r\n  //   Min = Math.round((Min+(Math.random()*60)));\r\n  //   durationMin = Min;\r\n  //   return durationMin\r\n  // }\r\n\r\n  // // Dauer Günstig\r\n  // const timeHourCheapRandomizer = () => {\r\n  //   durationCheapHour = Math.round((durationHour + (Math.random()*1)));\r\n  //   console.log(durationCheapHour)\r\n  //   return Math.round((durationCheapHour))\r\n  // }\r\n\r\n  // const timeMinCheapRandomizer = () => {\r\n  //   let durationCheapMin = Math.round((durationMin+(Math.random()*10)));\r\n  //   return durationCheapMin\r\n  // }\r\n\r\n  const Fahrtkostenrechner = (Fahrtkosten) => {\r\n    Fahrtkosten = (Fahrtkosten+(Math.random()*10));\r\n    FahrtkostenGuenstig = Fahrtkosten;\r\n    return (Math.round(FahrtkostenGuenstig));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {hideConnectionSelect? null : ( \r\n        <div>\r\n          <h1 className=\"logo\">Nav2Gö</h1>\r\n          <h1>Verbindungsauswahl</h1>\r\n          <div className=\"connectionChoice\">\r\n          {/* {timeMinRandomizer(durationMin)};\r\n              {timeHourRandomizer(durationHour)}\r\n              {timeMinCheapRandomizer(durationCheapMin)};\r\n              {timeHourCheapRandomizer(durationHour)}; */}\r\n            <h2>Günstigste Verbindung</h2>\r\n            <div id=\"containerCheapestConnection\">\r\n              <div className=\"verbindung-textfeld\">\r\n                  Fahrtkosten: {Fahrtkostenrechner(FahrtkostenGuenstig)} € </div>\r\n              <div className=\"verbindung-textfeld\">Dauer: {values[1].current.value} h {slowMin} min</div>\r\n              <div className=\"verbindung-textfeld\">Umstiege 1</div>\r\n            </div>\r\n          </div>\r\n        </div>)\r\n      }\r\n    {upperConnectionStarted  ? (\r\n      // lowerConnectionStarted? null : (\r\n          <ConnectionDisplay\r\n          departureStop={props.departureStop}\r\n          destinationStop={props.destinationStop}\r\n          departureDay={props.departureDay}\r\n          departureTime={props.departureTime}\r\n          upperConnectionStarted={upperConnectionStarted}\r\n          lowerConnectionStarted={lowerConnectionStarted}\r\n          /> \r\n          ) : ( lowerButtonFirstPressed? null : (\r\n            <div className=\"connectionChoice\">\r\n              <button onClick={() => {\r\n                setUpperConnectionStarted(true); \r\n                setUpperButtonFirstPressed(true);\r\n                setHideConnectionSelect(true); }}>\r\n                {\" \"}\r\n                Route starten{\" \"}\r\n              </button> \r\n            </div>) )\r\n      }\r\n    {hideConnectionSelect? null : (\r\n      <form>\r\n      <div className=\"connectionChoice\">\r\n          <h2>Schnellste Verbindung</h2>\r\n          <div id=\"containerFastestConnection\">\r\n            <div className=\"verbindung-textfeld\">\r\n               Fahrtkosten: {Fahrtkostenrechner(FahrtkostenGuenstig)} €</div>\r\n            <div className=\"verbindung-textfeld\">Dauer: {fastH} h {fastMin} min </div>\r\n            <div className=\"verbindung-textfeld\">Umstiege 1</div>\r\n          </div>\r\n        </div>\r\n        {backToSearchPageClicked ? (\r\n          <SearchPage\r\n          />\r\n        ) : (\r\n          <button \r\n            onClick={() => {setBackToSearchPageClicked(true);  setHideConnectionSelect(true); props.onGoBack(); } }\r\n          >\r\n            {\" \"}\r\n            Zurück zur Suche{\" \"}\r\n          </button>\r\n        )}\r\n      </form> )\r\n    }\r\n      {lowerConnectionStarted  ? (\r\n        <ConnectionDisplay\r\n            departureStop={props.departureStop}\r\n            destinationStop={props.destinationStop}\r\n            departureDay={props.departureDay}\r\n            departureTime={props.departureTime}\r\n            upperConnectionStarted={upperConnectionStarted}\r\n            lowerConnectionStarted={lowerConnectionStarted}\r\n            />\r\n            ) : ( upperButtonFirstPressed? null : (\r\n            <div className=\"connectionChoice\">\r\n              <div id=\"containerFastestConnection\">\r\n                <button onClick={() => { \r\n                    setLowerConnectionStarted(true);  \r\n                    setLowerButtonFirstPressed(true);\r\n                    setHideConnectionSelect(true); }} >\r\n                  {\" \"}\r\n                  Route starten{\" \"}\r\n                </button>\r\n              </div>\r\n            </div>))\r\n        }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConnectionSelect;\r\n"]},"metadata":{},"sourceType":"module"}