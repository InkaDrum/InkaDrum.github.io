{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Prog\\\\Udemy React\\\\nav2goe\\\\src\\\\components\\\\ConnectionDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../Style.css\";\nimport Logo from \"./Logo.js\";\nimport SearchPage from \"./SearchPage.js\";\nimport End from \"./End.js\";\nimport { FaBus } from \"react-icons/fa\";\nimport { GiKickScooter } from \"react-icons/gi\";\nimport { BsArrowRight } from \"react-icons/bs\"; //import 'webpack';\n\n/* import logo from '.../public/busemoji.png'\r\n\r\nconsole.log(logo); // /logo.84287d09.png\r\n\r\nfunction Header() {\r\n  // Import result is the URL of your image\r\n  return <img src={logo} alt=\"Logo\" />;\r\n}\r\n */\n//die Fahrtdauer (der Eingabewert) wird nach einem Festen Schlüssel (0,1 , 0,3 oder 0,2 der Gesamtfahrtdauer) \n// aufgeteilt in 2 bzw. 3 Fahrten und 1 bzw. 2 Wartezeiten . Ausgegeben wird es\n// in einem Array nach dem Muster [Fahrtdauer1, WartezeitAufFahrt2, Fahrtdauer2, usw]\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst durationSplitFast = time => {\n  let t = Number(time);\n  let trail1 = Number(Math.floor(t * 0.3));\n  let waiting1 = Number(Math.floor(t * 0.15));\n  let trail2 = Number(t - trail1 - waiting1);\n  console.log(\"durationSplitFast= \" + [Number(trail1), Number(waiting1), Number(trail2)]);\n  return [Number(trail1), Number(waiting1), Number(trail2)];\n};\n\nconst durationSplitCheap = time => {\n  let t = Number(time);\n  let trail1 = Number(Math.floor(t * 0.3));\n  let waiting1 = Number(Math.floor(t * 0.1));\n  let trail2 = Number(Math.floor(t * 0.2));\n  let waiting2 = Number(Math.floor(t * 0.15));\n  let trail3 = Number(t - trail1 - waiting1 - trail2 - waiting2);\n  console.log(\"durationSplitCheap= \" + [Number(trail1), Number(waiting1), Number(trail2), Number(waiting2), Number(trail3)]);\n  return [Number(trail1), Number(waiting1), Number(trail2), Number(waiting2), Number(trail3)];\n};\n\nconst addDuration = (time, h, min) => {\n  console.log(\"time =\" + time);\n  const [hours, minutes] = time.split(\":\");\n  let hours3 = Number(hours); //  console.log(\"hours3  = \" + hours3 );\n  // console.log(\"hours von eingabe (newDeparturetime) = \" + hours );\n  // console.log(\"Number(hours)von eingabe (newDeparturetime) =\" + Number(hours) );\n  // console.log(\"props.durationH = \" + props.durationH );\n  // console.log(\"Number(props.durationH) = \" + Number(props.durationH) );\n  // console.log(\"minutes  von eingabe (newDeparturetime) = \" + minutes);\n  // console.log(\"Number(minutes)von eingabe (newDeparturetime) =\" + Number(minutes) );\n  // console.log(\"props.durationMin = \" + props.durationMin );\n  // console.log(\"Number(props.durationMin) = \" + Number(props.durationMin) );\n\n  let hours2 = Number(hours) + Number(h);\n  let minutes2 = Number(minutes) + Number(min); // console.log(\"hours2 (von eingabe (newDeparturetime) + props.durationH)= \" + hours2 );\n  // console.log(\"minutes2 (von eingabe (newDeparturetime) + props.durationMin)= \" + minutes2 );\n  // console.log(hours2 + \":\" + minutes2 );\n\n  while (minutes >= 60) {\n    minutes = minutes - 60;\n    hours = hours + 1;\n  }\n\n  return hours2 + \":\" + minutes2;\n};\n\nconst ConnectionDisplay = props => {\n  _s();\n\n  const [clickedEnd, setEndClicked] = useState(false);\n  const [hideConnectionDisplay, setHideConnectionDisplay] = useState(true);\n  const [loadingMessage, setloadingMessage] = useState(true); // const [splittetDurationsCheap, setSplittedDurationsCheap] =useState(durationSplitCheap(addDuration(newDepartureTime,props.durationH, props.durationMin)));\n  // const [splittetDurationsFast, setSplittedDurationsFast] =useState(durationSplitFast(addDuration(newDepartureTime, props.durationH, props.durationMin)));\n  //die Fahrtdauer (der Eingabewert) wird nach einem Festen Schlüssel (0,1 , 0,3 oder 0,2 der Gesamtfahrtdauer) \n  // aufgeteilt in 2 bzw. 3 Fahrten und 1 bzw. 2 Wartezeiten . Ausgegeben wird es\n  // in einem Array nach dem Muster [Fahrtdauer1, WartezeitAufFahrt2, Fahrtdauer2, usw]\n  // const durationSplitFast = (time)=>  {\n  //   let t= Number(time);\n  //   let trail1= Math.floor(t*0.3); \n  //   let waiting1 = Math.floor(t*0.15);\n  //   let trail2 = t-trail1-waiting1;\n  //   console.log(\"durationSplitFast= \"+ trail1, waiting1, trail2);\n  //   return[ trail1, waiting1, trail2];\n  // }\n  // const durationSplitCheap = (time)=>  {\n  //   let t= Number(time);\n  //   let trail1= Math.floor(t*0.3); \n  //   let waiting1 = Math.floor(t*0.1);\n  //   let trail2= Math.floor(t*0.2); \n  //   let waiting2 = Math.floor(t*0.15);\n  //   let trail3 = t-trail1-waiting1-trail2-waiting2;\n  //   console.log(\"durationSplitCheap= \"+ trail1, waiting1, trail2, waiting2, trail3)\n  //   return[trail1, waiting1, trail2, waiting2, trail3]\n  // }\n\n  const backClickHandler = () => {\n    props.onGoBack();\n  };\n\n  const endClickHandler = () => {\n    setEndClicked(true);\n  }; // ------------------------------- FÜR DIE VERZÖGERUNG---------------------------------------------------------------\n\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setHideConnectionDisplay(false);\n      setloadingMessage(false);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, []); //   --------------------------(nicht ganz so wichtige) Ideen für Eingabezeit + paar Sekunden als Losfahrzeit anzeigen--------------------\n  // //const durations = () => {\n  //   let slowH, slowMin, fastH, fastMin = 0;\n  //   let t1 = Math.floor(Math.random() * (105 - 25 + 1)) + 25;\n  //   let t2=  Math.floor(Math.random() * (105 - 25 + 1)) + 25;\n  //   if (t1==t2) { t1= Number(t1)-1}\n  //   if(t2>=t1){\n  //     if(t1>=60){fastH=1; fastMin = t1-60;}else{fastH=0; fastMin = t1;}\n  //     if(t2>=60){slowH=1; slowMin = t2-60;}else{slowH=0; slowMin = t2;}\n  //   }\n  //   if(t1>t2){\n  //     if(t2>=60){fastH=1; fastMin = t2-60;}else{fastH=0; fastMin = t2;}\n  //     if(t1>=60){slowH=1; slowMin = t1-60;}else{slowH=0; slowMin = t1;}\n  //   }\n  //   // console.log(slowH, slowMin, fastH, fastMin);\n  //   return [slowH, slowMin, fastH, fastMin];\n  // }\n  // zu einer Zeit (attribut 1) eine h (attribut 2) und Min (attribut 3)  hinzufügen\n  // const addDuration = (time, h, min) => {\n  //   console.log(\"time =\" + time );\n  //   const [hours, minutes] = time.split(\":\");\n  //   let hours3 = Number(hours);\n  //     //  console.log(\"hours3  = \" + hours3 );\n  //     // console.log(\"hours von eingabe (newDeparturetime) = \" + hours );\n  //     // console.log(\"Number(hours)von eingabe (newDeparturetime) =\" + Number(hours) );\n  //     // console.log(\"props.durationH = \" + props.durationH );\n  //     // console.log(\"Number(props.durationH) = \" + Number(props.durationH) );\n  //     // console.log(\"minutes  von eingabe (newDeparturetime) = \" + minutes);\n  //     // console.log(\"Number(minutes)von eingabe (newDeparturetime) =\" + Number(minutes) );\n  //     // console.log(\"props.durationMin = \" + props.durationMin );\n  //     // console.log(\"Number(props.durationMin) = \" + Number(props.durationMin) );\n  //   let hours2 = Number(hours) + Number(h);\n  //   let minutes2 = Number(minutes) + Number(min); \n  //     // console.log(\"hours2 (von eingabe (newDeparturetime) + props.durationH)= \" + hours2 );\n  //     // console.log(\"minutes2 (von eingabe (newDeparturetime) + props.durationMin)= \" + minutes2 );\n  //     // console.log(hours2 + \":\" + minutes2 );\n  //   while(minutes>=60) {\n  //      minutes = minutes -60;\n  //     hours = hours+1 ;}\n  //   return(hours2 + \":\" + minutes2 );\n  // }\n  // zum in-string konvertieren, außerdem zwischen 3-9 min (zufällig) hinzufügen \n\n  const timeToDecimalAdd = time => {\n    const [hours, minutes] = time.split(\":\");\n    let additionalRandomMinutes = props.additionalRandomMinutes;\n    let tneu = Number(minutes) + Number(additionalRandomMinutes);\n    return Number(hours) + Number(tneu) / 60;\n  }; //   zum String in Zeit konvertieren \n\n\n  const stringToTime = StringTime => {\n    const hs = Math.floor(StringTime);\n    const mins = Math.round((StringTime - hs) * 60);\n    return `${hs < 10 ? \"0\" : \"\"}${hs}:${mins < 10 ? \"0\" : \"\"}${mins}`;\n  };\n\n  let newDepartureTime = stringToTime(timeToDecimalAdd(props.departureTime));\n  let splittetDurationsCheap = durationSplitCheap(addDuration(newDepartureTime, props.durationH, props.durationMin));\n  console.log(splittetDurationsCheap = \"splittedDurationsCHeap\");\n  let splittetDurationsFast = durationSplitFast(addDuration(newDepartureTime, props.durationH, props.durationMin));\n  console.log(splittetDurationsFast = \"splittedDurationsFast\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.cheaperConnectionStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [clickedEnd ? /*#__PURE__*/_jsxDEV(End // onGoBack={() => {\n      // setHideConnectionDisplay(false);\n      // setEndClicked(false);}\n      , {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-verbindung\",\n        children: hideConnectionDisplay ? loadingMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"...loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 53\n        }, this) : null : /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"Verbindung-header\",\n            children: \"Verbindung\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"h2ConnectionDisplay\",\n            children: \"Schritt 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-ConnectionDisplay\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"verbindung-textfeld\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Abfahrt:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this), \" \", props.departureDay, \" \", newDepartureTime, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"verbindung-textfeld\",\n              children: \"Linie: 50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"verbindung-textfeld\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Ankunft:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 21\n              }, this), \" \", props.departureDay, \" \", addDuration(newDepartureTime, 0, splittetDurationsCheap[0]), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"verbindung-textfeld\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Abfahrt an Haltestelle:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this), \" \", props.departureStop, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"busIcon\",\n              children: /*#__PURE__*/_jsxDEV(FaBus, {\n                size: \"3rem\",\n                color: \"white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"verbindung-textfeld\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Ankunft an Haltestelle:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 21\n              }, this), \" Weender Stra\\xDFe-Ost \", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"h2ConnectionDisplay\",\n            children: \"Schritt 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-ConnectionDisplay\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"verbindung-textfeld\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Abfahrt:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 21\n              }, this), \" \", props.departureDay, \" \", newDepartureTime, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"verbindung-textfeld\",\n              children: \"Linie: 50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"verbindung-textfeld\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Ankunft:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 21\n              }, this), \" \", props.departureDay, \" \", addDuration(newDepartureTime), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"verbindung-textfeld\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Abfahrt an Haltestelle:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 21\n              }, this), \" Weender Stra\\xDFe-Ost \", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"busIcon\",\n              children: /*#__PURE__*/_jsxDEV(GiKickScooter, {\n                size: \"3rem\",\n                color: \"white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"verbindung-textfeld\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Ankunft an Haltestelle:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 21\n              }, this), \" Neues Rathaus \", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"h2ConnectionDisplay\",\n            children: \"Schritt 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-ConnectionDisplay\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"verbindung-textfeld\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Abfahrt:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 21\n              }, this), \" \", props.departureDay, \" \", newDepartureTime, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"verbindung-textfeld\",\n              children: \"Linie: 50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"verbindung-textfeld\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Ankunft:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 21\n              }, this), \" \", props.departureDay, \" \", addDuration(newDepartureTime), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"verbindung-textfeld\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Abfahrt an Haltestelle:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 21\n              }, this), \" Neues Rathaus \", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"busIcon\",\n              children: /*#__PURE__*/_jsxDEV(FaBus, {\n                size: \"3rem\",\n                color: \"white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"verbindung-textfeld\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Ankunft an Haltestelle:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 21\n              }, this), \" \", props.destinationStop, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons-verbindung\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              onClick: backClickHandler,\n              type: \"submit\",\n              children: [\" \", \"Zur\\xFCck\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              onClick: () => {\n                endClickHandler();\n                props.onSetStartFormHidden(true);\n              },\n              children: [\" \", \"Test Beenden?\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: clickedEnd ? /*#__PURE__*/_jsxDEV(End // onGoBack={() => {\n      // setHideConnectionDisplay(false);\n      // setEndClicked(false);}\n      , {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-verbindung\",\n        children: hideConnectionDisplay ? loadingMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"...loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 53\n        }, this) : null : /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"Verbindung-header\",\n            children: \"Verbindung\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"h2ConnectionDisplay\",\n            children: \"Schritt 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-ConnectionDisplay\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"verbindung-textfeld\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Abfahrt:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this), \" \", props.departureDay, \" \", newDepartureTime, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"verbindung-textfeld\",\n              children: \"Linie: 50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"verbindung-textfeld\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Ankunft:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 19\n              }, this), \" \", props.departureDay, \" \", addDuration(newDepartureTime), \" \", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"verbindung-textfeld\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Abfahrt an Haltestelle:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 19\n              }, this), \" \", props.departureStop, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"busIcon\",\n              children: /*#__PURE__*/_jsxDEV(FaBus, {\n                size: \"3rem\",\n                color: \"white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"verbindung-textfeld\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Ankunft an Haltestelle:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 19\n              }, this), \" Weender Stra\\xDFe-Ost \", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"h2ConnectionDisplay\",\n            children: \"Schritt 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-ConnectionDisplay\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"verbindung-textfeld\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Abfahrt:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 19\n              }, this), \" \", props.departureDay, \" \", newDepartureTime, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"verbindung-textfeld\",\n              children: \"Linie: 50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"verbindung-textfeld\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Ankunft:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this), \" \", props.departureDay, \" \", addDuration(newDepartureTime), \" \", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"verbindung-textfeld\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Abfahrt an Haltestelle:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this), \" Weender Stra\\xDFe-Ost \", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"busIcon\",\n              children: /*#__PURE__*/_jsxDEV(FaBus, {\n                size: \"3rem\",\n                color: \"white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"verbindung-textfeld\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Ankunft an Haltestelle:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this), \" \", props.destinationStop, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons-verbindung\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              onClick: backClickHandler,\n              type: \"submit\",\n              children: [\" \", \"Zur\\xFCck\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              onClick: () => {\n                endClickHandler();\n                props.onSetStartFormHidden(true);\n              },\n              children: [\" \", \"Test Beenden?\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ConnectionDisplay, \"C6rA5sLt9x4le5usM2VPO7QYopU=\");\n\n_c = ConnectionDisplay;\nexport default ConnectionDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectionDisplay\");","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/Prog/Udemy React/nav2goe/src/components/ConnectionDisplay.js"],"names":["React","useState","useEffect","Logo","SearchPage","End","FaBus","GiKickScooter","BsArrowRight","durationSplitFast","time","t","Number","trail1","Math","floor","waiting1","trail2","console","log","durationSplitCheap","waiting2","trail3","addDuration","h","min","hours","minutes","split","hours3","hours2","minutes2","ConnectionDisplay","props","clickedEnd","setEndClicked","hideConnectionDisplay","setHideConnectionDisplay","loadingMessage","setloadingMessage","backClickHandler","onGoBack","endClickHandler","timer","setTimeout","clearTimeout","timeToDecimalAdd","additionalRandomMinutes","tneu","stringToTime","StringTime","hs","mins","round","newDepartureTime","departureTime","splittetDurationsCheap","durationH","durationMin","splittetDurationsFast","cheaperConnectionStarted","departureDay","departureStop","destinationStop","onSetStartFormHidden"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../Style.css\";\r\nimport Logo from \"./Logo.js\";\r\nimport SearchPage from \"./SearchPage.js\";\r\nimport End from \"./End.js\";\r\nimport { FaBus } from \"react-icons/fa\";\r\nimport { GiKickScooter } from \"react-icons/gi\";\r\nimport { BsArrowRight } from \"react-icons/bs\";\r\n\r\n\r\n//import 'webpack';\r\n/* import logo from '.../public/busemoji.png'\r\n\r\nconsole.log(logo); // /logo.84287d09.png\r\n\r\nfunction Header() {\r\n  // Import result is the URL of your image\r\n  return <img src={logo} alt=\"Logo\" />;\r\n}\r\n */\r\n\r\n//die Fahrtdauer (der Eingabewert) wird nach einem Festen Schlüssel (0,1 , 0,3 oder 0,2 der Gesamtfahrtdauer) \r\n// aufgeteilt in 2 bzw. 3 Fahrten und 1 bzw. 2 Wartezeiten . Ausgegeben wird es\r\n// in einem Array nach dem Muster [Fahrtdauer1, WartezeitAufFahrt2, Fahrtdauer2, usw]\r\nconst durationSplitFast = (time)=>  {\r\n  let t= Number(time);\r\n  let trail1= Number(Math.floor(t*0.3)); \r\n  let waiting1 = Number(Math.floor(t*0.15));\r\n  let trail2 = Number(t-trail1-waiting1);\r\n  console.log(\"durationSplitFast= \"+ [ Number(trail1), Number(waiting1), Number(trail2)]);\r\n  return[ Number(trail1), Number(waiting1), Number(trail2)];\r\n}\r\n\r\nconst durationSplitCheap = (time)=>  {\r\n  let t= Number(time);\r\n  let trail1= Number(Math.floor(t*0.3)); \r\n  let waiting1 = Number(Math.floor(t*0.1));\r\n  let trail2= Number(Math.floor(t*0.2)); \r\n  let waiting2 = Number(Math.floor(t*0.15));\r\n  let trail3 = Number(t-trail1-waiting1-trail2-waiting2);\r\n  console.log(\"durationSplitCheap= \"+ [Number(trail1), Number(waiting1), Number(trail2), Number(waiting2), Number(trail3)])\r\n  return[Number(trail1), Number(waiting1), Number(trail2), Number(waiting2), Number(trail3)]\r\n}\r\n\r\nconst addDuration = (time, h, min) => {\r\n  console.log(\"time =\" + time );\r\n  const [hours, minutes] = time.split(\":\");\r\n  let hours3 = Number(hours);\r\n    //  console.log(\"hours3  = \" + hours3 );\r\n    // console.log(\"hours von eingabe (newDeparturetime) = \" + hours );\r\n    // console.log(\"Number(hours)von eingabe (newDeparturetime) =\" + Number(hours) );\r\n    // console.log(\"props.durationH = \" + props.durationH );\r\n    // console.log(\"Number(props.durationH) = \" + Number(props.durationH) );\r\n    // console.log(\"minutes  von eingabe (newDeparturetime) = \" + minutes);\r\n    // console.log(\"Number(minutes)von eingabe (newDeparturetime) =\" + Number(minutes) );\r\n    // console.log(\"props.durationMin = \" + props.durationMin );\r\n    // console.log(\"Number(props.durationMin) = \" + Number(props.durationMin) );\r\n  let hours2 = Number(hours) + Number(h);\r\n  let minutes2 = Number(minutes) + Number(min); \r\n    // console.log(\"hours2 (von eingabe (newDeparturetime) + props.durationH)= \" + hours2 );\r\n    // console.log(\"minutes2 (von eingabe (newDeparturetime) + props.durationMin)= \" + minutes2 );\r\n    // console.log(hours2 + \":\" + minutes2 );\r\n  while(minutes>=60) {\r\n     minutes = minutes -60;\r\n    hours = hours+1 ;}\r\n  return(hours2 + \":\" + minutes2 );\r\n}\r\n\r\nconst ConnectionDisplay = (props) => {\r\n  const [clickedEnd, setEndClicked] = useState(false);\r\n  const [hideConnectionDisplay, setHideConnectionDisplay] = useState(true);\r\n  const [loadingMessage, setloadingMessage] = useState(true);\r\n  // const [splittetDurationsCheap, setSplittedDurationsCheap] =useState(durationSplitCheap(addDuration(newDepartureTime,props.durationH, props.durationMin)));\r\n  // const [splittetDurationsFast, setSplittedDurationsFast] =useState(durationSplitFast(addDuration(newDepartureTime, props.durationH, props.durationMin)));\r\n\r\n\r\n//die Fahrtdauer (der Eingabewert) wird nach einem Festen Schlüssel (0,1 , 0,3 oder 0,2 der Gesamtfahrtdauer) \r\n// aufgeteilt in 2 bzw. 3 Fahrten und 1 bzw. 2 Wartezeiten . Ausgegeben wird es\r\n// in einem Array nach dem Muster [Fahrtdauer1, WartezeitAufFahrt2, Fahrtdauer2, usw]\r\n// const durationSplitFast = (time)=>  {\r\n//   let t= Number(time);\r\n//   let trail1= Math.floor(t*0.3); \r\n//   let waiting1 = Math.floor(t*0.15);\r\n//   let trail2 = t-trail1-waiting1;\r\n//   console.log(\"durationSplitFast= \"+ trail1, waiting1, trail2);\r\n//   return[ trail1, waiting1, trail2];\r\n// }\r\n\r\n// const durationSplitCheap = (time)=>  {\r\n//   let t= Number(time);\r\n//   let trail1= Math.floor(t*0.3); \r\n//   let waiting1 = Math.floor(t*0.1);\r\n//   let trail2= Math.floor(t*0.2); \r\n//   let waiting2 = Math.floor(t*0.15);\r\n//   let trail3 = t-trail1-waiting1-trail2-waiting2;\r\n//   console.log(\"durationSplitCheap= \"+ trail1, waiting1, trail2, waiting2, trail3)\r\n//   return[trail1, waiting1, trail2, waiting2, trail3]\r\n// }\r\n\r\n\r\n\r\n  const backClickHandler = () => {\r\n    props.onGoBack();\r\n  };\r\n  const endClickHandler = () => {\r\n    setEndClicked(true);\r\n  };\r\n// ------------------------------- FÜR DIE VERZÖGERUNG---------------------------------------------------------------\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n   setHideConnectionDisplay(false);\r\n   setloadingMessage(false);\r\n    }, 1000);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n//   --------------------------(nicht ganz so wichtige) Ideen für Eingabezeit + paar Sekunden als Losfahrzeit anzeigen--------------------\r\n\r\n\r\n// //const durations = () => {\r\n//   let slowH, slowMin, fastH, fastMin = 0;\r\n//   let t1 = Math.floor(Math.random() * (105 - 25 + 1)) + 25;\r\n//   let t2=  Math.floor(Math.random() * (105 - 25 + 1)) + 25;\r\n//   if (t1==t2) { t1= Number(t1)-1}\r\n//   if(t2>=t1){\r\n//     if(t1>=60){fastH=1; fastMin = t1-60;}else{fastH=0; fastMin = t1;}\r\n//     if(t2>=60){slowH=1; slowMin = t2-60;}else{slowH=0; slowMin = t2;}\r\n//   }\r\n//   if(t1>t2){\r\n//     if(t2>=60){fastH=1; fastMin = t2-60;}else{fastH=0; fastMin = t2;}\r\n//     if(t1>=60){slowH=1; slowMin = t1-60;}else{slowH=0; slowMin = t1;}\r\n//   }\r\n//   // console.log(slowH, slowMin, fastH, fastMin);\r\n//   return [slowH, slowMin, fastH, fastMin];\r\n// }\r\n\r\n// zu einer Zeit (attribut 1) eine h (attribut 2) und Min (attribut 3)  hinzufügen\r\n// const addDuration = (time, h, min) => {\r\n//   console.log(\"time =\" + time );\r\n//   const [hours, minutes] = time.split(\":\");\r\n//   let hours3 = Number(hours);\r\n//     //  console.log(\"hours3  = \" + hours3 );\r\n//     // console.log(\"hours von eingabe (newDeparturetime) = \" + hours );\r\n//     // console.log(\"Number(hours)von eingabe (newDeparturetime) =\" + Number(hours) );\r\n//     // console.log(\"props.durationH = \" + props.durationH );\r\n//     // console.log(\"Number(props.durationH) = \" + Number(props.durationH) );\r\n//     // console.log(\"minutes  von eingabe (newDeparturetime) = \" + minutes);\r\n//     // console.log(\"Number(minutes)von eingabe (newDeparturetime) =\" + Number(minutes) );\r\n//     // console.log(\"props.durationMin = \" + props.durationMin );\r\n//     // console.log(\"Number(props.durationMin) = \" + Number(props.durationMin) );\r\n//   let hours2 = Number(hours) + Number(h);\r\n//   let minutes2 = Number(minutes) + Number(min); \r\n//     // console.log(\"hours2 (von eingabe (newDeparturetime) + props.durationH)= \" + hours2 );\r\n//     // console.log(\"minutes2 (von eingabe (newDeparturetime) + props.durationMin)= \" + minutes2 );\r\n//     // console.log(hours2 + \":\" + minutes2 );\r\n//   while(minutes>=60) {\r\n//      minutes = minutes -60;\r\n//     hours = hours+1 ;}\r\n//   return(hours2 + \":\" + minutes2 );\r\n// }\r\n\r\n// zum in-string konvertieren, außerdem zwischen 3-9 min (zufällig) hinzufügen \r\nconst timeToDecimalAdd = (time) => {\r\n  const [hours, minutes] = time.split(\":\");\r\n  let additionalRandomMinutes =  props. additionalRandomMinutes;\r\n  let tneu=Number(minutes)+ Number(additionalRandomMinutes);\r\n  return(Number(hours) + Number(tneu) / 60 );\r\n}\r\n\r\n//   zum String in Zeit konvertieren \r\nconst stringToTime = (StringTime) => {\r\n  const hs = Math.floor(StringTime);\r\n  const mins = Math.round((StringTime - hs) * 60);\r\n  return `${hs < 10 ? \"0\" : \"\"}${hs}:${mins < 10 ? \"0\" : \"\"}${mins}`;\r\n}\r\n\r\nlet newDepartureTime = stringToTime(timeToDecimalAdd(props.departureTime));\r\n\r\nlet splittetDurationsCheap = durationSplitCheap(addDuration(newDepartureTime,props.durationH, props.durationMin));\r\nconsole.log(splittetDurationsCheap = \"splittedDurationsCHeap\")\r\nlet splittetDurationsFast = durationSplitFast(addDuration(newDepartureTime, props.durationH, props.durationMin));\r\nconsole.log(splittetDurationsFast = \"splittedDurationsFast\")\r\n\r\n  return (\r\n    <div>\r\n    { props.cheaperConnectionStarted ? (\r\n    <div>\r\n      {clickedEnd ? (\r\n        <End \r\n        // onGoBack={() => {\r\n        // setHideConnectionDisplay(false);\r\n        // setEndClicked(false);}\r\n        />\r\n      ) : ( \r\n        <div className=\"container-verbindung\">\r\n          {/* {endClickHandler ? null:  */}\r\n          {hideConnectionDisplay ? (loadingMessage? <p>...loading...</p> : null) : (\r\n            <form>\r\n              <h1 className=\"Verbindung-header\">Verbindung</h1>\r\n              {/* <Bild/> \r\n              <img src={require('.../public/busemoji.png')} />\r\n              */}\r\n            <h2 className=\"h2ConnectionDisplay\">Schritt 1</h2>\r\n                <div className=\"container-ConnectionDisplay\">\r\n                  <div className=\"verbindung-textfeld\">\r\n                    {\" \"}\r\n                    <p>Abfahrt:</p> {props.departureDay} {newDepartureTime}{\" \"}\r\n                  </div>\r\n                  <div className=\"verbindung-textfeld\">Linie: 50</div>\r\n                  <div className=\"verbindung-textfeld\">\r\n                    <p>Ankunft:</p> {props.departureDay} {addDuration(newDepartureTime, 0, splittetDurationsCheap[0])}{\" \"}\r\n                  </div>\r\n                  <div className=\"verbindung-textfeld\">\r\n                    <p>Abfahrt an Haltestelle:</p> {props.departureStop}{\" \"}\r\n                  </div>\r\n                  <div className=\"busIcon\">\r\n                  <FaBus size=\"3rem\" color=\"white\" />\r\n                  </div>\r\n                  <div className=\"verbindung-textfeld\">\r\n                    <p>Ankunft an Haltestelle:</p> Weender Straße-Ost {\" \"}\r\n                  </div>\r\n              </div>\r\n              <h2 className=\"h2ConnectionDisplay\">Schritt 2</h2>\r\n                <div className=\"container-ConnectionDisplay\">\r\n                  <div className=\"verbindung-textfeld\">\r\n                    {\" \"}\r\n                    <p>Abfahrt:</p> {props.departureDay} {newDepartureTime}{\" \"}\r\n                  </div>\r\n                  <div className=\"verbindung-textfeld\">Linie: 50</div>\r\n                  <div className=\"verbindung-textfeld\">\r\n                    <p>Ankunft:</p> {props.departureDay} {addDuration(newDepartureTime)}{\" \"}\r\n                  </div>\r\n                  <div className=\"verbindung-textfeld\">\r\n                    <p>Abfahrt an Haltestelle:</p> Weender Straße-Ost {\" \"}\r\n                  </div>\r\n                  <div className=\"busIcon\">\r\n                  <GiKickScooter size=\"3rem\" color=\"white\" />\r\n                  </div>\r\n                  <div className=\"verbindung-textfeld\">\r\n                    <p>Ankunft an Haltestelle:</p> Neues Rathaus {\" \"}\r\n                  </div>\r\n              </div>\r\n              <h2 className=\"h2ConnectionDisplay\">Schritt 3</h2>\r\n                <div className=\"container-ConnectionDisplay\">\r\n                  <div className=\"verbindung-textfeld\">\r\n                    {\" \"}\r\n                    <p>Abfahrt:</p> {props.departureDay} {newDepartureTime}{\" \"}\r\n                  </div>\r\n                  <div className=\"verbindung-textfeld\">Linie: 50</div>\r\n                  <div className=\"verbindung-textfeld\">\r\n                    <p>Ankunft:</p> {props.departureDay} {addDuration(newDepartureTime)}{\" \"}\r\n                  </div>\r\n                  <div className=\"verbindung-textfeld\">\r\n                    <p>Abfahrt an Haltestelle:</p> Neues Rathaus {\" \"}\r\n                  </div>\r\n                  <div className=\"busIcon\">\r\n                  <FaBus size=\"3rem\" color=\"white\" />\r\n                  </div>\r\n                  <div className=\"verbindung-textfeld\">\r\n                    <p>Ankunft an Haltestelle:</p> {props.destinationStop}{\" \"}\r\n                  </div>\r\n              </div>\r\n              <div className=\"buttons-verbindung\">\r\n                <button\r\n                  className=\"button\"\r\n                  onClick={backClickHandler}\r\n                  type=\"submit\"\r\n                >\r\n                  {\" \"}\r\n                  Zurück\r\n                </button>\r\n                <button className=\"button\" onClick={() => {endClickHandler(); props.onSetStartFormHidden(true); } }>\r\n                  {\" \"}\r\n                  Test Beenden?\r\n                </button>\r\n              </div>\r\n            </form>\r\n          )}\r\n        </div>\r\n      )}\r\n      ;\r\n    </div>) :\r\n    (\r\n      <div>\r\n      {clickedEnd ? (\r\n        <End \r\n        // onGoBack={() => {\r\n        // setHideConnectionDisplay(false);\r\n        // setEndClicked(false);}\r\n        />\r\n      ) : (\r\n        <div className=\"container-verbindung\">\r\n          {/* {endClickHandler ? null:  */}\r\n          {hideConnectionDisplay ? (loadingMessage? <p>...loading...</p> : null) : (\r\n            <form>\r\n              <h1 className=\"Verbindung-header\">Verbindung</h1>\r\n              {/* <Bild/> \r\n              <img src={require('.../public/busemoji.png')} />\r\n              */}\r\n           <h2 className=\"h2ConnectionDisplay\">Schritt 1</h2>\r\n              <div className=\"container-ConnectionDisplay\">\r\n                <div className=\"verbindung-textfeld\">\r\n                  {\" \"}\r\n                  <p>Abfahrt:</p> {props.departureDay} {newDepartureTime}{\" \"}\r\n                </div>\r\n                <div className=\"verbindung-textfeld\">Linie: 50</div>\r\n                <div className=\"verbindung-textfeld\">\r\n                  <p>Ankunft:</p> {props.departureDay} {addDuration(newDepartureTime)} {\" \"}\r\n                </div>\r\n                <div className=\"verbindung-textfeld\">\r\n                  <p>Abfahrt an Haltestelle:</p> {props.departureStop}{\" \"}\r\n                </div>\r\n                <div className=\"busIcon\">\r\n                <FaBus size=\"3rem\" color=\"white\" />\r\n                </div>\r\n                <div className=\"verbindung-textfeld\">\r\n                  <p>Ankunft an Haltestelle:</p> Weender Straße-Ost {\" \"}\r\n                </div>\r\n              </div>\r\n              <h2 className=\"h2ConnectionDisplay\">Schritt 2</h2>\r\n              <div className=\"container-ConnectionDisplay\">\r\n                <div className=\"verbindung-textfeld\">\r\n                  {\" \"}\r\n                  <p>Abfahrt:</p> {props.departureDay} {newDepartureTime}{\" \"}\r\n                </div>\r\n                <div className=\"verbindung-textfeld\">Linie: 50</div>\r\n                <div className=\"verbindung-textfeld\">\r\n                  <p>Ankunft:</p> {props.departureDay} {addDuration(newDepartureTime)} {\" \"}\r\n                </div>\r\n                <div className=\"verbindung-textfeld\">\r\n                  <p>Abfahrt an Haltestelle:</p> Weender Straße-Ost {\" \"}\r\n                </div>\r\n                <div className=\"busIcon\">\r\n                <FaBus size=\"3rem\" color=\"white\" />\r\n                </div>\r\n                <div className=\"verbindung-textfeld\">\r\n                  <p>Ankunft an Haltestelle:</p> {props.destinationStop}{\" \"}\r\n                </div>\r\n              </div>\r\n              <div className=\"buttons-verbindung\">\r\n                <button\r\n                  className=\"button\"\r\n                  onClick={backClickHandler}\r\n                  type=\"submit\"\r\n                >\r\n                  {\" \"}\r\n                  Zurück\r\n                </button>\r\n                <button className=\"button\" onClick={() => {endClickHandler(); props.onSetStartFormHidden(true); } }>\r\n                  {\" \"}\r\n                  Test Beenden?\r\n                </button>\r\n              </div>\r\n            </form>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>)\r\n    } \r\n    )\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConnectionDisplay;\r\n"]},"metadata":{},"sourceType":"module"}