{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Prog\\\\Udemy React\\\\nav2goe\\\\src\\\\components\\\\ConnectionDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"../Style.css\";\nimport Logo from \"./Logo.js\";\nimport SearchPage from \"./SearchPage.js\";\nimport End from \"./End.js\"; //import 'webpack';\n\n/* import logo from '.../public/busemoji.png'\r\n\r\nconsole.log(logo); // /logo.84287d09.png\r\n\r\nfunction Header() {\r\n  // Import result is the URL of your image\r\n  return <img src={logo} alt=\"Logo\" />;\r\n}\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ConnectionDisplay = props => {\n  _s();\n\n  // Button - useState\n  const [clickedEnd, setEndClicked] = useState(false);\n  const [hideConnectionDisplay, setHideConnectionDisplay] = useState(false);\n\n  const backClickHandler = () => {\n    props.onGoBack();\n  };\n\n  const endClickHandler = () => {\n    setEndClicked(true);\n  }; // -------------------------------WICHTIGE FERTIGE NOTIZEN FÜRT DIE VERZÖGERUNG---------------------------------------------------------------\n  // für die verzögerung: use effect importieren\n  //todo: dann noch loading bar hinzufügen\n  // useEffect(() => {\n  //   const timer = setTimeout(() => {\n  //  setHideConnectionDisplay(false)\n  //   }, 7000);\n  //   return () => clearTimeout(timer);\n  // }, []);\n  //   --------------------------(nicht ganz so wichtige) Ideen für Eingabezeit + paar Sekunden als Losfahrzeit anzeigen--------------------\n  // zum in-string konvertieren:\n\n\n  const timeToDecimal = time => {\n    const [hours, minutes] = time.split(\":\");\n    console.log(hours, minutes);\n    let r = Number(Math.round(Math.random() * (9 - 3)) + 3);\n    console.log(r);\n    let tneu = Number(minutes) + Number(r);\n    console.log(tneu);\n    console.log(Number(hours) + Number(tneu) / 60);\n    return Number(hours) + Number(minutes + r) / 60;\n  }; //   zum Zurückkonvertieren: \n\n\n  const stringToTime = StringTime => {\n    const hs = Math.floor(StringTime);\n    console.log(hs);\n    const mins = Math.round((StringTime - hs) * 60);\n    console.log(mins);\n    console.log(`${hs < 10 ? \"0\" : \"\"}${hs}:${mins < 10 ? \"0\" : \"\"}${mins}`);\n    return `${hs < 10 ? \"0\" : \"\"}${hs}:${mins < 10 ? \"0\" : \"\"}${mins}`;\n  }; // let newDepartureTimePreResult = timeToDecimal(props.departureTime);\n  // let newDepartureTime = stringToTime(newDepartureTimePreResult);\n\n\n  let newDepartureTime = stringToTime(timeToDecimal(props.departureTime)); // const timeToDecimal = (time) => {\n  //   const [hours, minutes] = time.split(\":\");\n  //   let r =  Math.round(Math.random() * (9 - 3)) + 3 ;\n  //   let mneu = minutes +r; \n  //   if(mneu>60)\n  //     {hours = hours + 1;\n  //      mneu = mneu - 60; }\n  //   return Number(hours) + Number(mneu) / 60;\n  // }\n  // //   zum Zurückkonvertieren: \n  // const stringToTime = (StringTime) => {\n  //   const hs = Math.floor(StringTime);\n  //   const mins = Math.round((StringTime - hs) * 60);\n  //   return `${hs < 10 ? \"0\" : \"\"}${hs}:${mins < 10 ? \"0\" : \"\"}${mins}`;\n  // }\n  // let newDepartureTimePreResult = timeToDecimal(props.departureTime);\n  // let newDepartureTime = stringToTime(newDepartureTimePreResult);\n  // const timeToSeconds(time) {\n  //     const [hours, minutes] = time.split(\":\");\n  //     let sumOfSeconds = ((hours*60)+minutes);\n  //     return (sumOfSeconds);\n  // }\n  // To sum:\n  // let sumHoras = 0;\n  // for (let i = 0; i < resp.data.length; i++){\n  //      sumHoras += hoursStringToDecimal(resp.data[i].tempoGasto);\n  // }\n  // To sum:\n  // let sumHoras = 0;\n  // for (let i = 0; i < resp.data.length; i++){\n  //    sumHoras += hoursStringToDecimal(resp.data[i].tempoGasto);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [clickedEnd ? /*#__PURE__*/_jsxDEV(End // onGoBack={() => {\n    // setHideConnectionDisplay(false);\n    // setEndClicked(false);}\n    , {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-verbindung\",\n      children: hideConnectionDisplay ? null : /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"Verbindung-header\",\n          children: \"Verbindung\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-ConnectionDisplay\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"verbindung-textfeld\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Abfahrt:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this), \" \", props.departureDay, \" \", newDepartureTime, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"verbindung-textfeld\",\n            children: \"Linie: 50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"verbindung-textfeld\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Ankunft:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this), \" \", props.departureDay, \" \", props.departureTime, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"verbindung-textfeld\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Abfahrt an Haltestelle:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 19\n            }, this), \" \", props.departureStop, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"verbindung-textfeld\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Ankunft an Haltestelle:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this), \" \", props.destinationStop, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-verbindung\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: backClickHandler,\n            type: \"submit\",\n            children: [\" \", \"Zur\\xFCck\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: () => {\n              endClickHandler();\n              props.onSetStartFormHidden(true);\n            },\n            children: [\" \", \"Test Beenden?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ConnectionDisplay, \"C3GH/6K7QM0IuHQZzoq/qW2bECc=\");\n\n_c = ConnectionDisplay;\nexport default ConnectionDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectionDisplay\");","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/Prog/Udemy React/nav2goe/src/components/ConnectionDisplay.js"],"names":["React","useState","Logo","SearchPage","End","ConnectionDisplay","props","clickedEnd","setEndClicked","hideConnectionDisplay","setHideConnectionDisplay","backClickHandler","onGoBack","endClickHandler","timeToDecimal","time","hours","minutes","split","console","log","r","Number","Math","round","random","tneu","stringToTime","StringTime","hs","floor","mins","newDepartureTime","departureTime","departureDay","departureStop","destinationStop","onSetStartFormHidden"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../Style.css\";\r\nimport Logo from \"./Logo.js\";\r\nimport SearchPage from \"./SearchPage.js\";\r\nimport End from \"./End.js\";\r\n\r\n//import 'webpack';\r\n/* import logo from '.../public/busemoji.png'\r\n\r\nconsole.log(logo); // /logo.84287d09.png\r\n\r\nfunction Header() {\r\n  // Import result is the URL of your image\r\n  return <img src={logo} alt=\"Logo\" />;\r\n}\r\n */\r\n\r\nconst ConnectionDisplay = (props) => {\r\n  // Button - useState\r\n  const [clickedEnd, setEndClicked] = useState(false);\r\n  const [hideConnectionDisplay, setHideConnectionDisplay] = useState(false);\r\n\r\n  const backClickHandler = () => {\r\n    props.onGoBack();\r\n  };\r\n  const endClickHandler = () => {\r\n    setEndClicked(true);\r\n  };\r\n// -------------------------------WICHTIGE FERTIGE NOTIZEN FÜRT DIE VERZÖGERUNG---------------------------------------------------------------\r\n  // für die verzögerung: use effect importieren\r\n  //todo: dann noch loading bar hinzufügen\r\n  // useEffect(() => {\r\n  //   const timer = setTimeout(() => {\r\n  //  setHideConnectionDisplay(false)\r\n  //   }, 7000);\r\n  //   return () => clearTimeout(timer);\r\n  // }, []);\r\n\r\n//   --------------------------(nicht ganz so wichtige) Ideen für Eingabezeit + paar Sekunden als Losfahrzeit anzeigen--------------------\r\n\r\n\r\n// zum in-string konvertieren:\r\nconst timeToDecimal = (time) => {\r\n  const [hours, minutes] = time.split(\":\");\r\n  console.log(hours, minutes);\r\n  let r =  Number(Math.round(Math.random() * (9 - 3)) + 3 ); \r\n  console.log(r);\r\n  let tneu=Number(minutes)+ Number(r);\r\n  console.log(tneu);\r\n  console.log(Number(hours) + Number(tneu) / 60 )\r\n  return(Number(hours) + Number(minutes + r) / 60 );\r\n}\r\n\r\n//   zum Zurückkonvertieren: \r\nconst stringToTime = (StringTime) => {\r\n  const hs = Math.floor(StringTime);\r\n  console.log(hs);\r\n  const mins = Math.round((StringTime - hs) * 60);\r\n   console.log(mins);\r\n  console.log(`${hs < 10 ? \"0\" : \"\"}${hs}:${mins < 10 ? \"0\" : \"\"}${mins}`)\r\n  return `${hs < 10 ? \"0\" : \"\"}${hs}:${mins < 10 ? \"0\" : \"\"}${mins}`;\r\n}\r\n// let newDepartureTimePreResult = timeToDecimal(props.departureTime);\r\n// let newDepartureTime = stringToTime(newDepartureTimePreResult);\r\n\r\nlet newDepartureTime = stringToTime(timeToDecimal(props.departureTime));\r\n\r\n// const timeToDecimal = (time) => {\r\n//   const [hours, minutes] = time.split(\":\");\r\n//   let r =  Math.round(Math.random() * (9 - 3)) + 3 ;\r\n//   let mneu = minutes +r; \r\n//   if(mneu>60)\r\n//     {hours = hours + 1;\r\n//      mneu = mneu - 60; }\r\n//   return Number(hours) + Number(mneu) / 60;\r\n// }\r\n\r\n// //   zum Zurückkonvertieren: \r\n// const stringToTime = (StringTime) => {\r\n//   const hs = Math.floor(StringTime);\r\n//   const mins = Math.round((StringTime - hs) * 60);\r\n//   return `${hs < 10 ? \"0\" : \"\"}${hs}:${mins < 10 ? \"0\" : \"\"}${mins}`;\r\n// }\r\n// let newDepartureTimePreResult = timeToDecimal(props.departureTime);\r\n// let newDepartureTime = stringToTime(newDepartureTimePreResult);\r\n\r\n// const timeToSeconds(time) {\r\n//     const [hours, minutes] = time.split(\":\");\r\n//     let sumOfSeconds = ((hours*60)+minutes);\r\n//     return (sumOfSeconds);\r\n// }\r\n\r\n// To sum:\r\n// let sumHoras = 0;\r\n// for (let i = 0; i < resp.data.length; i++){\r\n//      sumHoras += hoursStringToDecimal(resp.data[i].tempoGasto);\r\n// }\r\n\r\n// To sum:\r\n// let sumHoras = 0;\r\n// for (let i = 0; i < resp.data.length; i++){\r\n//    sumHoras += hoursStringToDecimal(resp.data[i].tempoGasto);\r\n// }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {clickedEnd ? (\r\n        <End \r\n        // onGoBack={() => {\r\n        // setHideConnectionDisplay(false);\r\n        // setEndClicked(false);}\r\n        />\r\n      ) : (\r\n        <div className=\"container-verbindung\">\r\n          {/* {endClickHandler ? null:  */}\r\n          {hideConnectionDisplay ? null : (\r\n            <form>\r\n              <h1 className=\"Verbindung-header\">Verbindung</h1>\r\n              {/* <Bild/> \r\n              <img src={require('.../public/busemoji.png')} />\r\n              */}\r\n              <div className=\"container-ConnectionDisplay\">\r\n                <div className=\"verbindung-textfeld\">\r\n                  {\" \"}\r\n                  <p>Abfahrt:</p> {props.departureDay} {newDepartureTime}{\" \"}\r\n                </div>\r\n                <div className=\"verbindung-textfeld\">Linie: 50</div>\r\n                <div className=\"verbindung-textfeld\">\r\n                  <p>Ankunft:</p> {props.departureDay} {props.departureTime}{\" \"}\r\n                </div>\r\n                <div className=\"verbindung-textfeld\">\r\n                  <p>Abfahrt an Haltestelle:</p> {props.departureStop}{\" \"}\r\n                </div>\r\n                <br></br>\r\n                <div className=\"verbindung-textfeld\">\r\n                  <p>Ankunft an Haltestelle:</p> {props.destinationStop}{\" \"}\r\n                </div>\r\n              </div>\r\n              <div className=\"buttons-verbindung\">\r\n                <button\r\n                  className=\"button\"\r\n                  onClick={backClickHandler}\r\n                  type=\"submit\"\r\n                >\r\n                  {\" \"}\r\n                  Zurück\r\n                </button>\r\n                <button className=\"button\" onClick={() => {endClickHandler(); props.onSetStartFormHidden(true); } }>\r\n                  {\" \"}\r\n                  Test Beenden?\r\n                </button>\r\n              </div>\r\n            </form>\r\n          )}\r\n        </div>\r\n      )}\r\n      ;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConnectionDisplay;\r\n"]},"metadata":{},"sourceType":"module"}